import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'org.quiltmc.loom' version '1.3-SNAPSHOT'
	id 'org.quiltmc.quilt-mappings-on-loom' version '4.2.3'
}

version = project.mod_version
group = project.maven_group

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { // for cloth-config-fabric
        url "https://maven.shedaniel.me/"
//        content { includeGroupByRegex "^me\\.shedaniel\\..+" }
    }

    maven { // for modmenu
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/releases/"
    }

}

loom {
    splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:$project.minecraft_version+build.$project.quilt_build_number:intermediary-v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include(modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"))

	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixinextras_version}")))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}
